---
layout: post
title:  "MozJpeg Correlation"
date:   2015-03-25
categories: programming
---

Hello fello readers,

I've wanted to try [mozjpeg](https://github.com/mozilla/mozjpeg) since it came out.
After getting it installed I was surprised by how awesome the compression is.


To get a bit of an idea of mozjpeg, it is a fork of the libjpeg. When installed,
it replaces the original cjpeg with theirs (works only on Unix).
[Here](https://hacks.mozilla.org/2014/08/using-mozjpeg-to-create-efficient-jpegs/)'s a nice introduction to it.


The redundant questions are: 

* What would be the best compression ratio to use?
* Should I use progressive JPEG or non-progressive, what's the difference?


The second one is an easy guess. Progressive JPEG gives a smaller output but it'll
render in subsequent scan, from low quality to high quality. I personally find this extremely
annoying when used on the web.


And thus, I've started a mini-project to gather statistics on the first question.
I've hacked around a script that'll open 2 images, one being the original, the other a
compressed one, and then asks if the compression is satisfying. It re-iterates 
and compress the next image with a higher ratio until the user is unsatisfied.
At this point it stores the last best compression used and also keeps the last best image.


I'm hoping that after gathering a lot of inputs the program will be able to guess,
if there's a correlation between the size of the image and the compression ratio,
what compression is best to use.


[Here](https://github.com/venam/mozjpeg-stats)'s the link to the project on Github.


Cheers!
